{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "IDetectionPoints": {
            "additionalProperties": false,
            "description": "Client/custom detection points and regular detection points",
            "properties": {
                "clients": {
                    "items": {
                        "$ref": "#/definitions/IClient"
                    },
                    "type": "array"
                },
                "detectionPoints": {
                    "items": {
                        "$ref": "#/definitions/DetectionPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "detectionPoints"
            ],
            "type": "object"
        },
        "INTERVAL_UNITS": {
            "description": "Interval units",
            "enum": [
                "milliseconds",
                "seconds",
                "minutes",
                "hours",
                "days"
            ],
            "type": "string"
        },
        "Role": {
            "description": "Role is the standard attribution of an access to be used by the {@link AccessController} \nto determine {@link ClientApplication} access to the different pieces of functionality.",
            "enum": [
                "ADD_EVENT",
                "ADD_ATTACK",
                "GET_RESPONSES",
                "EXECUTE_REPORT",
                "GET_EVENTS",
                "GET_ATTACKS"
            ],
            "type": "string"
        },
        "IClient": {
            "additionalProperties": false,
            "description": "Client/custom detection points (override some aspects for a client or brand new detection points).",
            "properties": {
                "clientName": {
                    "type": "string"
                },
                "detectionPoints": {
                    "items": {
                        "$ref": "#/definitions/DetectionPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "clientName",
                "detectionPoints"
            ],
            "type": "object"
        },
        "ClientApplication": {
            "additionalProperties": false,
            "description": "The ClientApplication object represents a consumer of the AppSensor \nservices in any of the client-server style setups.",
            "properties": {
                "ipAddresses": {
                    "description": "The {@link IPAddress} of the client application, optionally set in the server configuration",
                    "items": {
                        "$ref": "#/definitions/IPAddress"
                    },
                    "type": "array"
                },
                "name": {
                    "default": "",
                    "description": "The name of the client application",
                    "type": "string"
                },
                "roles": {
                    "default": [],
                    "description": "The collection of Roles associated with this client application",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name",
                "roles"
            ],
            "type": "object"
        },
        "DetectionPoint": {
            "additionalProperties": false,
            "description": "The detection point represents the unique sensor concept in the code.\n\nA list of project detection points are maintained at https://www.owasp.org/index.php/AppSensor_DetectionPoints",
            "properties": {
                "category": {
                    "default": "",
                    "description": "Category identifier for the detection point. (ex. \"Request\", \"AccessControl\", \"SessionManagement\")",
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "description": "Identifier for the detection point. (ex. \"IE1\", \"RE2\")",
                    "type": "string"
                },
                "responses": {
                    "default": [],
                    "description": "Set of {@link Response}s associated with given detection point.",
                    "items": {
                        "$ref": "#/definitions/Response"
                    },
                    "type": "array"
                },
                "threshold": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Threshold"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "{@link Threshold} for determining whether given detection point (associated {@link AppSensorEvent})\nshould be considered an {@link Attack}."
                }
            },
            "required": [
                "category",
                "responses",
                "threshold"
            ],
            "type": "object"
        },
        "DetectionSystem": {
            "additionalProperties": false,
            "description": "Identifier label for the system that detected the event. \nThis will be either the client application, or possibly an external \ndetection system, such as syslog, a WAF, network IDS, etc.",
            "properties": {
                "detectionSystemId": {
                    "default": "",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IPAddress"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "required": [
                "detectionSystemId",
                "ipAddress"
            ],
            "type": "object"
        },
        "IPAddress": {
            "additionalProperties": false,
            "description": "The IP Address for the user, optionally provided by the client application.",
            "properties": {
                "address": {
                    "default": "",
                    "type": "string"
                },
                "geoLocation": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/GeoLocation"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "geoLocation"
            ],
            "type": "object"
        },
        "Interval": {
            "additionalProperties": false,
            "description": "The Interval represents a span of time.\n\n<ul>\n\t\t<li>duration (example: 15)</li>\n\t\t<li>unit: (example: minutes)</li>\n</ul>",
            "properties": {
                "duration": {
                    "default": 0,
                    "description": "Duration portion of interval, ie. '3' if you wanted \nto represent an interval of '3 minutes'",
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "unit": {
                    "$ref": "#/definitions/INTERVAL_UNITS",
                    "description": "Unit portion of interval, ie. 'minutes' if you wanted \nto represent an interval of '3 minutes'.\nConstants are provided in the Interval class for the \nunits supported by the reference implementation, ie.\nSECONDS, MINUTES, HOURS, DAYS."
                }
            },
            "required": [
                "duration",
                "unit"
            ],
            "type": "object"
        },
        "KeyValuePair": {
            "additionalProperties": false,
            "description": "Represent a (key, value) pair.\n It could store application specific information.",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "type": "object"
        },
        "Response": {
            "additionalProperties": false,
            "description": "After an {@link Attack} has been determined to have occurred, a Response\nis executed. The Response configuration is done on the server-side, not \nthe client application.",
            "properties": {
                "action": {
                    "default": "",
                    "description": "String representing response action name",
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "detectionPoint": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DetectionPoint"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "ADDITION TO THE ORIGINAL CODE TO TRACE WHAT CAUSED THIS RESPONSE\nESSENTIAL FOR REPORTING\n{@link DetectionPoint} that was triggered"
                },
                "detectionSystem": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DetectionSystem"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Client application name that response applies to."
                },
                "id": {
                    "type": "string"
                },
                "interval": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Interval"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "{@link Interval} response should last for, if applicable. Ie. block access for 30 minutes"
                },
                "metadata": {
                    "description": "Represent extra metadata, anything client wants to send",
                    "items": {
                        "$ref": "#/definitions/KeyValuePair"
                    },
                    "type": "array"
                },
                "rule": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "ADDITION TO THE ORIGINAL CODE TO TRACE WHAT CAUSED THIS RESPONSE\nESSENTIAL FOR REPORTING\n{@link Rule} that was triggered"
                },
                "timestamp": {
                    "description": "When the event occurred",
                    "format": "date-time",
                    "type": "string"
                },
                "user": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/User"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "{@link User} the response is for"
                }
            },
            "required": [
                "action"
            ],
            "type": "object"
        },
        "Threshold": {
            "additionalProperties": false,
            "description": "The Threshold represents a number of occurrences over a span of time.\n\n<ul>\n\t\t<li>count: (example: 12)</li>\n\t\t<li>interval: (example: 15 minutes)</li>\n</ul>",
            "properties": {
                "count": {
                    "default": 0,
                    "description": "The count at which this threshold is triggered.",
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "interval": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Interval"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The time frame within which 'count' number of actions has to be detected in order to\ntrigger this threshold."
                }
            },
            "required": [
                "count",
                "interval"
            ],
            "type": "object"
        },
        "User": {
            "additionalProperties": false,
            "description": "The standard User object. This represents the end user in the system, \nNOT the client application. \n\nThe base implementation assumes the username is provided by the client application. \n\nIt is up to the client application to manage the username. \nThe username could be anything, an actual username, an IP address, \nor any other identifier desired. The core notion is that any desired \ncorrelation on the user is done by comparing the username.",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IPAddress"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "ipAddress",
                "username"
            ],
            "type": "object"
        },
        "CorrelationSet": {
            "additionalProperties": false,
            "description": "The CorrelationSet represents a set of {@link ClientApplication}s that \nshould be considered to share the same {@link User} base. \n\nFor example if server1 and server2 are part of a correlation set, \nthen client1/userA is considered the same {@link User} as client2/userA. \n\nThis can be useful for simple tracking of {@link User} activity across multiple\n{@link ClientApplication}s.",
            "properties": {
                "clientApplications": {
                    "default": [],
                    "description": "{@link ClientApplication}s that are represented in this correlation set",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "clientApplications"
            ],
            "type": "object"
        },
        "GeoLocation": {
            "additionalProperties": false,
            "description": "General object representing geo-location.",
            "properties": {
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "default": 0,
                    "type": "number"
                },
                "longitude": {
                    "default": 0,
                    "type": "number"
                }
            },
            "required": [
                "latitude",
                "longitude"
            ],
            "type": "object"
        },
        "Clause": {
            "additionalProperties": false,
            "description": "A Clause represents the terms in an {@link Expression} separated by an \"OR\" operator.\nEach {@link MonitorPoint} in the monitorPoints field are the variables joined\nby \"AND\" operators.\n\nFor example:\n\t\tIn the expression: \"MP1 AND MP2 OR MP3 AND MP4\"\n\n\t\t\"MP1 AND MP2\" would be a single clause and \"MP3 AND MP4\" would be another.",
            "properties": {
                "id": {
                    "type": "string"
                },
                "monitorPoints": {
                    "default": [],
                    "description": "The monitor points being checked as variables in an Expression",
                    "items": {
                        "$ref": "#/definitions/DetectionPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "monitorPoints"
            ],
            "type": "object"
        },
        "Expression": {
            "additionalProperties": false,
            "description": "An Expression is a logical boolean expression where the variables are {@link MonitorPoint}s.\nEach Expression in a {@link Rule} is separated by the \"THEN\" operator.\n\nAn Expression contains a set of {@link Clause}s. Only one {@link Clause} needs to evaluate to true\nfor an Expression to evaluate to true.\n\nFor example:\n\t\tIn the Rule: \"MP1 AND MP2 THEN MP3 OR mP4\"\n\n\t\t\"MP1 AND MP2\" would be the first Expression with a single Clause\n\t\tand \"MP3 OR MP4\" would a second Expression with two Clauses.",
            "properties": {
                "clauses": {
                    "default": [],
                    "description": "The Clauses that build up the Expression. *",
                    "items": {
                        "$ref": "#/definitions/Clause"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "window": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Interval"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The window of time a Clause must be triggered within"
                }
            },
            "required": [
                "clauses",
                "window"
            ],
            "type": "object"
        },
        "Rule": {
            "additionalProperties": false,
            "description": "A Rule defines a logical aggregation of {@link MonitorPoint}s to determine if an\n{@link Attack} is occurring. A Rule uses the boolean operators \"AND\" and \"OR\" as well\nas the temporal operator \"THEN\" in joining {@link MonitorPoint}s into a Rule.\n\nFor example:\n\t\tA rule could be as simple as: \"MP1 AND MP2\"\n\t\tWhere the Rule will generate an attack if both MonitorPoint 1 and 2\n\t\tare violated within the Rule's window.\n\n\t\tMore complex: \"MP1 AND MP2 THEN MP3 OR MP4\"\n\n\t\tEven more complex: \"MP1 AND MP2 THEN MP3 OR MP4 THEN MP5 AND MP6 OR MP7\"",
            "properties": {
                "expressions": {
                    "default": [],
                    "description": "The {@link Expression}s that build up a Rule\nThe order of the list corresponds to the temporal order of the expressions.",
                    "items": {
                        "$ref": "#/definitions/Expression"
                    },
                    "type": "array"
                },
                "guid": {
                    "default": "",
                    "description": "Unique identifier",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "description": "An optional human-friendly name for the Rule",
                    "type": "string"
                },
                "responses": {
                    "default": [],
                    "description": "Set of {@link Response}s associated with given Rule.",
                    "items": {
                        "$ref": "#/definitions/Response"
                    },
                    "type": "array"
                },
                "window": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Interval"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The window is the time all {@link Expression}s must be triggered within.\nA Rule's window must be greater than or equal to the total of it's Expressions' windows."
                }
            },
            "required": [
                "expressions",
                "guid",
                "name",
                "responses",
                "window"
            ],
            "type": "object"
        }
    },
    "description": "Represents the configuration for server-side components.",
    "properties": {
        "clientApplicationIdentificationHeaderName": {
            "type": "string"
        },
        "clientApplications": {
            "items": {
                "$ref": "#/definitions/ClientApplication"
            },
            "type": "array"
        },
        "configurationFile": {
            "type": "string"
        },
        "correlationSets": {
            "items": {
                "$ref": "#/definitions/CorrelationSet"
            },
            "type": "array"
        },
        "detectionPoints": {
            "$ref": "#/definitions/IDetectionPoints"
        },
        "geolocateIpAddresses": {
            "type": "boolean"
        },
        "geolocationDatabasePath": {
            "type": "string"
        },
        "rules": {
            "items": {
                "$ref": "#/definitions/Rule"
            },
            "type": "array"
        },
        "serverHostName": {
            "type": "string"
        },
        "serverPort": {
            "type": "number"
        },
        "serverSocketTimeout": {
            "type": "number"
        }
    },
    "required": [
        "detectionPoints"
    ],
    "type": "object"
}

